<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <link rel="shortcut icon" href="/images/OIP.jpg" type="image/x-icon">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Add Previous Exams</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            height: 100vh;
            margin: 0;
            padding: 0;
            background-color: #fff;
            /* ÿÆŸÑŸÅŸäÿ© ÿ®Ÿäÿ∂ÿßÿ° */
            color: #004aad;
            /* ÿ£ÿ≤ÿ±ŸÇ ÿ∫ÿßŸÖŸÇ */
            text-align: center;
        }

        h1 {
            font-size: 2.5em;
            font-weight: bold;
            color: #004aad;
            border-bottom: 3px solid #004aad;
            padding-bottom: 10px;
            margin-bottom: 20px;
        }

        .button-container {
            display: flex;
            flex-direction: column;
            gap: 15px;
            align-items: center;
        }

        input[type="number"],
        select {
            padding: 10px;
            font-size: 1.1em;
            border: 2px solid #004aad;
            border-radius: 8px;
            width: 250px;
            text-align: center;
            transition: all 0.3s ease-in-out;
        }

        input[type="number"]:focus,
        select:focus {
            outline: none;
            border-color: #007bff;
            box-shadow: 0 0 10px rgba(0, 123, 255, 0.5);
        }

        button {
            padding: 12px 25px;
            font-size: 1.3em;
            font-weight: bold;
            color: white;
            background: linear-gradient(135deg, #004aad, #007bff);
            /* ÿ™ÿØÿ±ÿ¨ ÿ£ÿ≤ÿ±ŸÇ ŸÅÿßÿÆÿ± */
            border: none;
            border-radius: 10px;
            cursor: pointer;
            transition: all 0.3s ease-in-out;
            box-shadow: 0 4px 8px rgba(0, 74, 173, 0.3);
        }

        button:hover {
            background: linear-gradient(135deg, #007bff, #004aad);
            transform: scale(1.05);
            box-shadow: 0 6px 15px rgba(0, 74, 173, 0.5);
        }

        .pdf-list {
            margin-top: 20px;
            list-style-type: none;
            padding: 0;
        }

        .pdf-list li {
            margin: 5px 0;
            font-size: 1.2em;
            color: #004aad;
            font-weight: bold;
        }
    </style>
</head>

<body>
    <h1 id="course-title">Add Previous Exams</h1>
    <div class="button-container">
        <input type="number" name="age" id="yaer" min="2010" step="1" placeholder=" Enter the yaer of Exam">

        <input type="file" id="pdfInput" accept="application/pdf" style="display: none;">
        <button id="addPdfButton">Add Exam</button>
        {{!-- <ul class="pdf-list" id="pdfList">
            <!-- ÿ≥Ÿäÿ™ŸÖ ÿ•ÿ∂ÿßŸÅÿ© ÿ£ÿ≥ŸÖÿßÿ° ŸÖŸÑŸÅÿßÿ™ PDF ŸáŸÜÿß -->
        </ul> --}}
        <select id="mySelect">
            <option value="">All Exam </option>
        </select>
    </div>
    <script>
        // ÿßÿ≥ÿ™ÿÆÿ±ÿßÿ¨ ŸÖÿπŸÑŸÖÿ© course ŸÖŸÜ URL Ÿàÿ™ÿ≠ÿØŸäÿ´ ÿπŸÜŸàÿßŸÜ ÿßŸÑÿµŸÅÿ≠ÿ©
        const urlParams = new URLSearchParams(window.location.search);
        const courseName = urlParams.get('course');
        const idDoctor = urlParams.get('id');
        const select = document.getElementById('mySelect');

        fetch('http://localhost:3000/Doctor/previousExam', {
            method: 'PATCH',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ courseName: courseName }) // ÿ™ÿπÿØŸäŸÑ ÿßÿ≥ŸÖ ÿßŸÑŸÉŸàÿ±ÿ≥ ÿ≠ÿ≥ÿ® ÿßŸÑÿ≠ÿßÿ¨ÿ©
        })
            .then(response => response.json())
            .then((data) => {
                console.log("üì• Parsed data:", data);

                if (!Array.isArray(data)) {
                    throw new Error("‚ùå Data format is incorrect! Expected an array.");
                }

                // ÿ•ÿ∂ÿßŸÅÿ© ÿÆŸäÿßÿ± ÿßŸÅÿ™ÿ±ÿßÿ∂Ÿä
                select.innerHTML = '<option value="" disabled selected>All Exam Added</option>';

                // ÿ•ÿ∂ÿßŸÅÿ© ÿ®ÿßŸÇŸä ÿßŸÑÿÆŸäÿßÿ±ÿßÿ™
                data.forEach((item) => {
                    const option = document.createElement('option');
                    option.value = item;
                    option.textContent = item;
                    select.appendChild(option);
                });

                // ÿπŸÜÿØ ÿ™ÿ∫ŸäŸäÿ± ÿßŸÑŸÇŸäŸÖÿ© Ÿäÿ™ŸÖ ÿßŸÑÿ™Ÿàÿ¨ŸäŸá
                select.addEventListener('change', () => {
                    const selectedValue = select.value;
                    if (selectedValue) {
                        window.location.href = `http://localhost:3000/Doctor/showAllQuestionPrevious?id=${idDoctor}&year=${selectedValue}&course=${courseName}`;
                    }
                });
            })
            .catch(error => console.error('‚ùå Error:', error));
        if (courseName) {
            document.getElementById('course-title').textContent = `Add Previous Exams for ${courseName}`;

        }

        document.getElementById('addPdfButton').addEventListener('click', () => {
            document.getElementById('pdfInput').click();
        });

        document.getElementById('pdfInput').addEventListener('change', (event) => {
            alert("Please wait for prossing exam and saved it in our program")
            const file = event.target.files[0];
            if (file) {
                const listItem = document.createElement('li');
                listItem.textContent = file.name;


                // ŸäŸÖŸÉŸÜŸÉ ÿ•ÿ∂ÿßŸÅÿ© ŸÉŸàÿØ ŸÑÿ™ÿ≠ŸÖŸäŸÑ ÿßŸÑŸÖŸÑŸÅ ÿ•ŸÑŸâ ÿßŸÑÿÆÿßÿØŸÖ ŸáŸÜÿß
                const year = document.getElementById('yaer')
                // ŸÖÿ´ÿßŸÑ:
                const formData = new FormData();
                formData.append('pdf', file);
                formData.append('year', year.value)
                formData.append('course', courseName)
                fetch('http://localhost:3000/Doctor/previousExam', {
                    method: 'POST',
                    body: formData
                }).then(response => response.json())
                    .then(data => {

                        if (data.message = 'Questions categorized successfully') {
                            alert('Questions categorized successfully')
                            setTimeout(() => {
                                location.reload();

                            }, 2000)
                        }

                    }).catch(error => {
                        console.error('Error uploading file:', error);
                    });
            }
        }); 
    </script>
</body>

</html>