
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Select Chapter</title>
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;600&display=swap');

        body {
            font-family: 'Poppins', sans-serif;
            background-color: #f8faff;
            padding: 30px;
            margin: 0;
            display: flex;
            justify-content: center;
        }

        .container {
            background: white;
            padding: 25px;
            border-radius: 15px;
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
            max-width: 850px;
            width: 100%;
        }

        h2 {
            color: #007bff;
            text-align: center;
            margin-bottom: 20px;
        }

        .question-section {
            margin-top: 20px;
            padding: 15px;
            border-radius: 10px;
            background: #f1f7ff;
            border-left: 5px solid #007bff;
        }

        .question-card {
            background: #fff;
            padding: 15px;
            border-radius: 10px;
            margin: 15px 0;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
            transition: 0.3s;
            display: flex;
            align-items: center;
            flex-direction: column;
        }

        .question-header {
            display: flex;
            align-items: center;
            font-weight: 600;
            gap: 10px;
        }

        .options {
            margin-top: 10px;
            width: 100%;
        }

        .option {
            display: flex;
            align-items: center;
            padding: 6px 10px;
            background: #f8faff;
            border-radius: 5px;
            margin: 5px 0;
        }

        .multi-box {
            background: #e9f5ff;
            padding: 15px;
            border-radius: 10px;
            margin-top: 15px;
            border-left: 4px solid #007bff;
        }

        .add-btn {
            background-color: #007bff;
            color: white;
            border: none;
            padding: 10px 20px;
            border-radius: 5px;
            cursor: pointer;
            display: block;
            margin: 20px auto;
            font-size: 16px;
        }
    </style>
</head>
<body>

    <div class="container">
        <h2>Questions for Chapter</h2>
        <button class="add-btn" onclick="fetchQuestions()">Load Questions</button>
        <div id="mcqContainer" class="question-section">
            <h3>MCQ Questions</h3>
        </div>
        <div id="essayContainer" class="question-section">
            <h3>Essay Questions</h3>
        </div>
        <div id="multiContainer" class="question-section">
            <h3>Multi-choice Questions</h3>
        </div>
        <button class="add-btn" onclick="addToExam()">Add to Exam</button>
    </div>

    <script>
        const urlParams = new URLSearchParams(window.location.search);
        const courseName = urlParams.get('course');
        const idDoctor = urlParams.get('id');
        const modelName = urlParams.get('modelName');
        const chapterName = urlParams.get('chapter');
        const mode = urlParams.get('mode');

        function fetchQuestions() {
            fetch('http://localhost:3000/Doctor/SelectChapter', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ idDoctor, courseName, modelName, chapterName, mode })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success && data.type === "ai") {
                    displayQuestions(data.data);
                }
            })
            .catch(error => console.error("‚ùå Fetch Error:", error));
        }

        function displayQuestions(data) {
            const mcqContainer = document.getElementById("mcqContainer");
            const essayContainer = document.getElementById("essayContainer");
            const multiContainer = document.getElementById("multiContainer");

            mcqContainer.innerHTML = '<h3>MCQ Questions</h3>';
            essayContainer.innerHTML = '<h3>Essay Questions</h3>';
            multiContainer.innerHTML = '<h3>Multi-choice Questions</h3>';

            data.mcq.forEach(mcq => {
                mcqContainer.innerHTML += `
                    <div class="question-card">
                        <div class="question-header">
                            <input type="checkbox" class="mcq-checkbox">
                            <span>${mcq.question}</span>
                        </div>
                        <div class="options">
                            ${mcq.options.slice(0, 4).map(option => `<div class="option"><label>${option}</label></div>`).join('')}
                        </div>
                    </div>
                `;
            });

            data.essay.forEach(essay => {
                essayContainer.innerHTML += `
                    <div class="question-card">
                        <div class="question-header">
                            <input type="checkbox" class="essay-checkbox">
                            <span>üìù ${essay.question}</span>
                        </div>
                    </div>
                `;
            });

            data.multi.forEach(item => {
                let passageHTML = `
                    <div class="multi-box">
                        <h3><input type="checkbox" class="multi-checkbox"> Passage: ${item.passage}</h3>
                `;

                item.questions.slice(0, 3).forEach(question => {
                    passageHTML += `
                        <div class="question-card">
                            <div class="question-header">
                                <span>${question.question}</span>
                            </div>
                            <div class="options">
                                ${question.options.slice(0, 4).map(option => `<div class="option"><label>${option}</label></div>`).join('')}
                            </div>
                        </div>
                    `;
                });

                passageHTML += `</div>`;
                multiContainer.innerHTML += passageHTML;
            });
        }

       function addToExam() {
        const selectedQuestions = { mcq: [], essay: [], multi: [] };

        // ÿ¨ŸÖÿπ ÿ£ÿ≥ÿ¶ŸÑÿ© MCQ
        document.querySelectorAll(".mcq-checkbox:checked").forEach(checkbox => {
            const questionDiv = checkbox.closest(".question-card");
            selectedQuestions.mcq.push({
                question: questionDiv.querySelector(".question-header span").innerText,
                options: Array.from(questionDiv.querySelectorAll(".option label")).map(opt => opt.innerText)
            });
        });

        // ÿ¨ŸÖÿπ ÿ£ÿ≥ÿ¶ŸÑÿ© ÿßŸÑŸÖŸÇÿßŸÑ
        document.querySelectorAll(".essay-checkbox:checked").forEach(checkbox => {
            selectedQuestions.essay.push({
                question: checkbox.closest(".question-card").querySelector(".question-header span").innerText
            });
        });

        // ÿ¨ŸÖÿπ ÿ£ÿ≥ÿ¶ŸÑÿ© ÿßŸÑŸÄ Passage ÿ®ÿ£ÿ≥ÿ¶ŸÑÿ™Ÿá ŸàÿßŸÑÿßÿÆÿ™Ÿäÿßÿ±ÿßÿ™
        document.querySelectorAll(".multi-checkbox:checked").forEach(checkbox => {
            const passageBox = checkbox.closest(".multi-box");
            const passageText = passageBox.querySelector("h3").innerText.replace("Passage: ", "").trim();
            const questions = [];

            passageBox.querySelectorAll(".question-card").forEach(questionDiv => {
                questions.push({
                    question: questionDiv.querySelector(".question-header span").innerText,
                    options: Array.from(questionDiv.querySelectorAll(".option label")).map(opt => opt.innerText)
                });
            });

            selectedQuestions.multi.push({
                passage: passageText,
                questions: questions
            });
        });

        console.log("üìã Selected Questions:", selectedQuestions);
        const urlParams = new URLSearchParams(window.location.search);
        const modelName = urlParams.get('modelName');
          fetch('http://localhost:3000/Doctor/SelectChapter', {
                method: 'PATCH',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({
                    SelectedMCQs: selectedQuestions.mcq,
                    SelectedEssayQuestions: selectedQuestions.essay,
                    SelectedMultiQuestions: selectedQuestions.multi,
                    modelName: modelName
                })
            })
                .then(response => response.json())
                .then((data) => {
                    console.log(data);

                    // ÿ•ŸÜÿ¥ÿßÿ° ÿßŸÑÿπŸÜÿµÿ± ÿßŸÑÿÆÿßÿµ ÿ®ÿßŸÑÿ™ŸÜÿ®ŸäŸá
                    let alertBox = document.createElement("div");
                    alertBox.innerText = "Questions added to the exam successfully!";
                    alertBox.style.position = "fixed";
                    alertBox.style.top = "50%";
                    alertBox.style.left = "50%";
                    alertBox.style.transform = "translate(-50%, -50%)";
                    alertBox.style.background = "linear-gradient(135deg, #004aad, #007bff)";
                    alertBox.style.color = "white";
                    alertBox.style.padding = "20px 40px";
                    alertBox.style.borderRadius = "10px";
                    alertBox.style.boxShadow = "0 10px 30px rgba(0, 74, 173, 0.4)";
                    alertBox.style.fontSize = "1.5em";
                    alertBox.style.fontWeight = "bold";
                    alertBox.style.textAlign = "center";
                    alertBox.style.opacity = "0";
                    alertBox.style.transition = "opacity 0.5s ease-in-out, transform 0.5s ease-in-out";

                    document.body.appendChild(alertBox);

                    // ÿ™ÿ¥ÿ∫ŸäŸÑ ÿßŸÑÿ£ŸÜŸäŸÖŸäÿ¥ŸÜ ŸÑÿ∏ŸáŸàÿ± ÿßŸÑÿ™ŸÜÿ®ŸäŸá
                    setTimeout(() => {
                        alertBox.style.opacity = "1";
                        alertBox.style.transform = "translate(-50%, -50%) scale(1.1)";
                    }, 100);

                    // ÿ•ÿÆŸÅÿßÿ° ÿßŸÑÿ™ŸÜÿ®ŸäŸá ÿ®ÿπÿØ 3 ÿ´ŸàÿßŸÜŸç
                    setTimeout(() => {
                        const urlParams = new URLSearchParams(window.location.search);
                        const courseName = urlParams.get('course');
                        const idDoctor = urlParams.get('id');
                        const modelName = urlParams.get('modelName');
                        alertBox.style.opacity = "0";
                        alertBox.style.transform = "translate(-50%, -50%) scale(0.9)";
                        setTimeout(() => {
                            document.body.removeChild(alertBox);
                            window.location.href = `http://localhost:3000/Doctor/mymatrials?id=${idDoctor}&modelName=${modelName}&course=${courseName}`; // ÿ∫Ÿäÿ± ÿßŸÑÿ±ÿßÿ®ÿ∑ ŸÑÿµŸÅÿ≠ÿ™ŸÉ ÿßŸÑŸÖÿ∑ŸÑŸàÿ®ÿ©
                        }, 500);
                    }, 3000);
                })

                .catch(error => console.error('Error:', error));
    }
    </script>
</body>
</html>
